[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tinkering with Oncology Data",
    "section": "",
    "text": "This is a quick and dirty project investigating oncology data."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Survival_Rates.html",
    "href": "Survival_Rates.html",
    "title": "Understanding Survival Rates",
    "section": "",
    "text": "An important caveat about understanding cancer is that treatment is not necessarily about “curing” the disease; to summarise Hank Green, a YouTuber who documented his diagnosis and treatment, of the 9000 Americans who develop Hodgkin Lymphoma, 900 die. “Boom, that’s your statistic right there, 10%, right? Nope, not really!”\nSurvival rates are not designed to be interpreted as simply as that; according to the CDC, such interpretations don’t take into account factors like the age of the individual at time of diagnosis, the duration of the disease, the stage of the cancer, and sophistication of available treatment and technology, and many other factors. Let’s take a look at some data to understand this better."
  },
  {
    "objectID": "Survival_Rates.html#patient-journeys",
    "href": "Survival_Rates.html#patient-journeys",
    "title": "Understanding Survival Rates",
    "section": "Patient Journeys",
    "text": "Patient Journeys\nI found a small data set from Our World In Data that we can use to visualize how patients’ journeys are not always the same.\n\nFetching the Data\nWe’ll use the data.world package to pull directly from the site and use a short SQL query to check the tables and pull the data into a dataframe:\n\nsuppressPackageStartupMessages({\n    library(tidyverse)\n    library(ggrain)\n    library(plotly)\n    library(data.world)\n})\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'ggrain' was built under R version 4.2.3\n\n\nWarning: package 'plotly' was built under R version 4.2.3\n\n\n\nds <- \"https://data.world/makeovermonday/2018w40-five-year-cancer-survival-rates-in-america\"\n\ntables <- data.world::query(\n    data.world::qry_sql(\"SELECT * FROM Tables\"),\n    dataset = ds\n)\n\nRows: 1 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tableId, tableName, tableTitle, owner, dataset\nlgl (1): tableDescription\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(tables)\n\n# A tibble: 1 × 6\n  tableId                    tableName tableTitle tableDescription owner dataset\n  <chr>                      <chr>     <chr>      <lgl>            <chr> <chr>  \n1 five_year_cancer_survival… five_yea… five_year… NA               make… 2018w4…\n\n\n\nquery <- \"SELECT * from five_year_cancer_survival_rates_in_usa\"\n\nfive_yr <- data.world::query(\n    data.world::qry_sql(query),\n    dataset = ds\n)\n\nRows: 1887 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): race, gender, cancer_type\ndbl (2): survival_rate, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfive_yr\n\n# A tibble: 1,887 × 5\n   survival_rate  year race      gender  cancer_type\n           <dbl> <dbl> <chr>     <chr>   <chr>      \n 1         0.559  1977 All races females All cancers\n 2         0.55   1980 All races females All cancers\n 3         0.551  1983 All races females All cancers\n 4         0.576  1986 All races females All cancers\n 5         0.596  1989 All races females All cancers\n 6         0.609  1992 All races females All cancers\n 7         0.618  1995 All races females All cancers\n 8         0.511  1989 All races males   All cancers\n 9         0.591  1992 All races males   All cancers\n10         0.608  1995 All races males   All cancers\n# ℹ 1,877 more rows\n\n\nFrom glimpsing this data, we can see that the term “survival rate” can be broken down by race, gender, and cancer type. Essentially, each row tells us what the 5-year survival rate would be that year for a person who contracts that cancer.\nLet’s visualize:\n\nfive_yr %>% \n    ggplot(aes(x = 1, y = survival_rate, fill = race, colour = race)) +\n    theme_minimal() +\n    geom_rain(alpha = .5) +\n    coord_flip() +\n    theme(axis.text.y = element_blank(), axis.title.y = element_blank())+ \n    labs(title = \"Survival rates of aspects of cancer over time\", subtitle = \"Race\")\n\nWarning: Removed 221 rows containing non-finite values\n(`stat_half_ydensity()`).\n\n\nWarning: Removed 221 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: Removed 221 rows containing missing values (`geom_point_sorted()`).\n\n\n\n\n\n\nfive_yr %>%\n     ggplot(aes(x = 1, y = survival_rate, fill = gender, colour = gender)) +\n    theme_minimal() +\n    geom_rain(alpha = .5) +\n    coord_flip() +\n    theme(axis.text.y = element_blank(), axis.title.y = element_blank())+ \n    labs(title = \"Survival rates of aspects of cancer over time\", subtitle = \"Gender\")\n\nWarning: Removed 221 rows containing non-finite values\n(`stat_half_ydensity()`).\n\n\nWarning: Removed 221 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: Removed 221 rows containing missing values (`geom_point_sorted()`).\n\n\n\n\n\n\nfive_yr %>%\n    ggplot(aes(x = cancer_type, y = survival_rate)) +\n    theme_minimal() +\n    geom_violin() +\n    theme(axis.text.x = element_text(angle = 45))+ \n    labs(title = \"Survival rates of aspects of cancer over time\", subtitle = \"Cancer type\")\n\nWarning: Removed 221 rows containing non-finite values (`stat_ydensity()`).\n\n\n\n\n\nThese data appear to be a bit of a mish mosh, but remember that this is over time. Let’s try and put that in perspective by making something similar to the original plot.\nLet’s take a look at leukemia for example:\n\nfive_yr %>%\n    filter(cancer_type == \"Leukemia\") %>%\n    ggplot(aes(x = year, y = survival_rate, colour = race)) +\n    geom_line() +\n    facet_grid(gender~cancer_type)\n\nWarning: Removed 4 rows containing missing values (`geom_line()`).\n\n\n\n\n\nThis shows an upward trend overall, but there wouldn’t be enough reasonable room to plot each and every combination of variables. We should reasonably compress some of them. I’m going to assume that we wouldn’t be missing out on too much if we ignored intermittent downward trends, so maybe it would be interesting to see the change in survival rate over time?"
  },
  {
    "objectID": "Survival_Rates.html#change-in-survival-rate-over-time",
    "href": "Survival_Rates.html#change-in-survival-rate-over-time",
    "title": "Understanding Survival Rates",
    "section": "Change in Survival Rate Over Time",
    "text": "Change in Survival Rate Over Time\n\nfive_yr %>%\n    filter(cancer_type == \"Leukemia\") %>%\n    filter(!is.na(survival_rate)) %>%\n    group_by(race, gender) %>%\n    summarise(survival_rate_change = last(survival_rate) - first(survival_rate))\n\n`summarise()` has grouped output by 'race'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 9 × 3\n# Groups:   race [3]\n  race      gender  survival_rate_change\n  <chr>     <chr>                  <dbl>\n1 All races females                0.261\n2 All races males                  0.322\n3 All races total                  0.296\n4 Black     females                0.194\n5 Black     males                  0.286\n6 Black     total                  0.244\n7 White     females                0.272\n8 White     males                  0.324\n9 White     total                  0.508\n\n\nIn this table, the percent of people who survive leukemia has increased by the value in the rightmost column. We can think of this as an “improvement in outcomes” measure over time. Let’s do this for all cancers:\n\nfive_yr %>%\n    filter(!is.na(survival_rate)) %>%\n    group_by(race, gender, cancer_type) %>%\n    summarise(survival_rate_change = last(survival_rate) - first(survival_rate)) %>%\n    arrange(survival_rate_change)\n\n`summarise()` has grouped output by 'race', 'gender'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 141 × 4\n# Groups:   race, gender [9]\n   race      gender  cancer_type       survival_rate_change\n   <chr>     <chr>   <chr>                            <dbl>\n 1 Black     females Skin                          -0.146  \n 2 Black     males   Skin                          -0.0710 \n 3 All races males   All cancers                   -0.0390 \n 4 All races females Cervix uteri                  -0.00300\n 5 All races total   Cervix uteri                  -0.00300\n 6 Black     total   All cancers                    0.00200\n 7 Black     females Pancreas                       0.047  \n 8 All races males   Thyroid                        0.0510 \n 9 All races males   Lung and bronchus              0.055  \n10 All races males   Bladder                        0.0550 \n# ℹ 131 more rows\n\n\nThis is interesting. We can now see that improvement varies by race, gender, and cancer type, with some survival rates actually decreasing over time. That’s worrying. Let’s plot this to see the full gambit:\n\nfive_yr %>%\n    filter(!is.na(survival_rate)) %>%\n    group_by(race, gender, cancer_type) %>%\n    summarise(survival_rate_change = last(survival_rate) - first(survival_rate)) %>%\n    arrange(survival_rate_change) -> five_yr_change\n\n`summarise()` has grouped output by 'race', 'gender'. You can override using\nthe `.groups` argument.\n\npp <- five_yr_change %>%\n    ggplot(aes(y = survival_rate_change, x=cancer_type, fill=gender)) +\n    geom_col(position = \"dodge\") +\n    coord_flip() +\n    theme_minimal() +\n    facet_grid(~race) + \n    labs(title = \"Change in 5-year Survival Rate % of Different Cancers\", y = \"Survival Rate Change from 1977 to 2013\", \n    caption = \"The plot shows how the percentage of people who survive 5 years after diagnosis has changed over the last 40 years.\")\n\nggplotly(pp)\n\n\n\n\n\nFrom this chart, we can conclude that there have been improvements in almost all cancer treatments with a few exceptions — for example, skin cancer amongst black females has seen a noticeable drop in 5-year survival rates. Why would this be?"
  },
  {
    "objectID": "Survival_Rates.html#conlcusion",
    "href": "Survival_Rates.html#conlcusion",
    "title": "Understanding Survival Rates",
    "section": "Conlcusion",
    "text": "Conlcusion\nThis is a quick and dirty look at the data to get a sense of where we are, but overall still speaks to the original comment — understanding survival rates is complicated and all interpretations have to be looked at within their respective contexts."
  },
  {
    "objectID": "Survival_Rates.html#pkgs",
    "href": "Survival_Rates.html#pkgs",
    "title": "Understanding Survival Rates",
    "section": "Pkgs",
    "text": "Pkgs\n\nsessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS 14.1.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] data.world_1.3.1 dwapi_0.3.2      plotly_4.10.4    ggrain_0.0.4    \n [5] lubridate_1.9.2  forcats_1.0.0    stringr_1.5.0    dplyr_1.1.4     \n [9] purrr_1.0.2      readr_2.1.5      tidyr_1.3.0      tibble_3.2.1    \n[13] ggplot2_3.4.3    tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1  xfun_0.37         colorspace_2.1-0  vctrs_0.6.5      \n [5] generics_0.1.3    htmltools_0.5.8.1 viridisLite_0.4.2 yaml_2.3.6       \n [9] utf8_1.2.4        rlang_1.1.3       pillar_1.9.0      glue_1.7.0       \n[13] withr_3.0.0       bit64_4.0.5       ini_0.3.1         lifecycle_1.0.4  \n[17] munsell_0.5.0     gtable_0.3.3      htmlwidgets_1.6.2 evaluate_0.22    \n[21] labeling_0.4.2    knitr_1.42        tzdb_0.4.0        gghalves_0.1.4   \n[25] fastmap_1.1.1     crosstalk_1.2.1   parallel_4.2.2    curl_5.2.1       \n[29] fansi_1.0.6       ggpp_0.5.6        polynom_1.4-1     renv_1.0.5       \n[33] scales_1.2.1      vroom_1.6.5       jsonlite_1.8.8    farver_2.1.1     \n[37] bit_4.0.5         hms_1.1.3         digest_0.6.35     stringi_1.8.3    \n[41] grid_4.2.2        cli_3.6.2         tools_4.2.2       magrittr_2.0.3   \n[45] lazyeval_0.2.2    crayon_1.5.2      pkgconfig_2.0.3   MASS_7.3-58.1    \n[49] data.table_1.14.8 timechange_0.2.0  rmarkdown_2.21    httr_1.4.7       \n[53] R6_2.5.1          compiler_4.2.2"
  }
]